import { useState } from 'react'

import './App.css'

import { Card, CardContent } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
//import { Button } from "antd";
//import { Card } from "antd";

const initialBoard = Array(3).fill(null).map(() => Array(3).fill(null));

type Player = "X" | "O" | null;
type Board = Player[][];

interface CheckWinner {
  (board: Board): Player;
}

const checkWinner: CheckWinner = (board) => {
  for (let i = 0; i < 3; i++) {
    if (board[i][0] && board[i][0] === board[i][1] && board[i][0] === board[i][2]) return board[i][0];
    if (board[0][i] && board[0][i] === board[1][i] && board[0][i] === board[2][i]) return board[0][i];
  }
  if (board[0][0] && board[0][0] === board[1][1] && board[0][0] === board[2][2]) return board[0][0];
  if (board[0][2] && board[0][2] === board[1][1] && board[0][2] === board[2][0]) return board[0][2];
  return null;
};

function App() {
  const [board, setBoard] = useState(initialBoard);
  const [player, setPlayer] = useState("X");
  const [history, setHistory] = useState<Player[]>([]);

  interface HandleClick {
    (row: number, col: number): void;
  }

  const handleClick: HandleClick = (row, col) => {
    if (board[row][col] || checkWinner(board)) return;
    const newBoard: Board = board.map((r, i) =>
      r.map((cell, j) => (i === row && j === col ? player : cell))
    );
    const winner: Player = checkWinner(newBoard);
    if (winner) setHistory([...history, winner]);
    setBoard(newBoard);
    setPlayer(player === "X" ? "O" : "X");
  };

  const resetGame = () => {
    setBoard(initialBoard);
    setPlayer("X");
  };

  return (
    <div className="flex flex-col items-center p-4">
      <h1 className="text-2xl font-bold mb-4">Tic Tac Toe</h1>
      <img src="/Tic Tac Toe Board Game .jpg" alt="Tic Tac Toe Example" className="w-60 h-auto my-4" />
      <Card className="grid grid-cols-3 gap-2"
        
      >
        {board.map((row, i) =>
          row.map((cell, j) => (
            <Button
              key={`${i}-${j}`}
              className="w-20 h-20 text-2xl"
              onClick={() => handleClick(i, j)}
              style={{ backgroundColor: "black", color: "white" }}
            >
              {cell}
            </Button>
          ))
        )}
      </Card>
      <Button onClick={resetGame} className="mt-4">Reset</Button>
      <Card className="mt-6 w-full max-w-md">
        
          <h2 className="text-xl font-semibold mb-2">Scoreboard</h2>
          <ul>
            {history.map((winner, index) => (
              <li key={index}>Game {index + 1}: Winner - {winner}</li>
            ))}
          </ul>
        
      </Card>
    </div>
  );
};


export default App
<Card className="grid grid-cols-3 gap-2 p-4"
      
      style={{ backgroundColor: "gray", color: "white" }}>
    <div className="relative w-[300px] h-[300px]">
    <GridLines />
  {board.map((row, i) =>
          row.map((cell, j) => (
            <Button
              key={`${i}-${j}`}
              className="w-20 h-20 text-2xl"
              onClick={() => handleClick(i, j)}
              style={{ backgroundColor: "black", color: "white" }}
            >
              {cell}
            </Button>
            ))
          )}
        </div>
          </Card>

          <Card className="relative w-[300px] h-[300px] grid grid-cols-3 gap-0 p-4"style={{ backgroundColor: "black", color: "white" }}>
          <svg viewBox="0 0 300 300" className="absolute top-0 left-0 w-full h-full pointer-events-none">
            
            
            <line x1="100" y1="0" x2="100" y2="300" stroke="white" strokeWidth="6" strokeLinecap="round" />
            <line x1="200" y1="0" x2="200" y2="300" stroke="white" strokeWidth="6" strokeLinecap="round" />
           
            
            <line x1="0" y1="100" x2="300" y2="100" stroke="white" strokeWidth="6" strokeLinecap="round" />
            <line x1="0" y1="200" x2="300" y2="200" stroke="white" strokeWidth="6" strokeLinecap="round" />
          </svg>
          {board.map((row, i) =>
            row.map((cell, j) => (
            <Button
              key={`${i}-${j}`}
              className="w-[100px] h-[100px] text-2xl border-0"
              onClick={() => handleClick(i, j)}
              style={{ backgroundColor: "transparent", color: "white" }}
            >
              <Cell value={cell} />
            </Button>
            ))
          )}
          </Card>
        </div>
        */
        <img src="/Tic Tac Toe Board Game .jpg" alt="Tic Tac Toe Example" className="w-60 h-auto my-4" />